{"version":3,"sources":["img/Goshan.jpg","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","connect","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,oC,wnBC8C5BC,EApCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,6FACCE,GACD,kBAAC,IAAD,CAAOC,MAAM,qCACZ,kBAAC,IAAD,CACCC,OAAQF,EAAYG,UAAY,kBAAC,IAAD,CAAQC,IAAKJ,EAAYG,YAAe,KACxEE,YAAaL,EAAYM,MAAQN,EAAYM,KAAKL,MAAQD,EAAYM,KAAKL,MAAQ,IAFpF,UAIKD,EAAYO,WAJjB,YAI+BP,EAAYQ,aAI5C,kBAAC,IAAD,CAAOP,MAAM,sBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQQ,KAAK,KAAKC,MAAM,IAAIC,QAASZ,EAAIa,UAAQ,UAAjD,kC,gFCbEC,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOlB,GAAIkB,EAAMlB,IAChB,kBAAC,IAAD,CACCmB,KAAM,kBAAC,IAAD,CAAcN,QAASK,EAAMjB,GAAIa,UAAQ,QAC7CC,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAASf,IAAKgB,IAAQC,IAAI,qBCmB5BC,MAjCf,WAAgB,IAAD,EACyBC,mBAAS,QADlC,mBACNC,EADM,KACOC,EADP,OAEkBF,mBAAS,MAF3B,mBAENvB,EAFM,KAEO0B,EAFP,OAGeH,mBAAS,kBAAC,IAAD,CAAed,KAAK,WAH5C,mBAGNkB,EAHM,KAGEC,EAHF,KAKbC,qBAAU,WAAM,4CAQd,4BAAAC,EAAA,sEACqBC,IAAQC,YAAY,uBADzC,OACQC,EADR,OAEEP,EAAQO,GACRL,EAAU,MAHZ,4CARc,sBACdG,IAAQG,WAAU,YAAiC,IAAD,IAA7BC,OAAUC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,KACnC,GAAa,yBAATD,EAAiC,CACnC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAL5B,mCAadQ,KACC,IAEH,IAAM/C,EAAK,SAAAgD,GACTtB,EAAesB,EAAEC,cAAcC,QAAQC,KAGzC,OACE,kBAAC,IAAD,CAAM1B,YAAaA,EAAaG,OAAQA,GACtC,kBAAC,EAAD,CAAM7B,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,MC5B9BgC,IAAQoB,KAAK,gBAQbC,IAASC,OAAO,kBAAC,EAAD,MAASd,SAASe,eAAe,W","file":"static/js/main.35af5bf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Goshan.2d071494.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nconst Home = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>App все еще функция</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Connect\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n\r\n\t\t<Group title=\"Navigation Example\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\r\n\t\t\t\t\tShow me the Persik, please\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport persik from '../img/Goshan.jpg';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tPersik\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\r\n\t</Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport Persik from './panels/Persik';\r\n\r\nfunction App() {\r\n  const [activePanel, setActivePanel] = useState('home');\r\n  const [fetchedUser, setUser] = useState(null);\r\n  const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n  useEffect(() => {\r\n    connect.subscribe(({ detail: { type, data } }) => {\r\n      if (type === 'VKWebAppUpdateConfig') {\r\n        const schemeAttribute = document.createAttribute('scheme');\r\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        document.body.attributes.setNamedItem(schemeAttribute);\r\n      }\r\n    });\r\n    async function fetchData() {\r\n      const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n      setUser(user);\r\n      setPopout(null);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const go = e => {\r\n    setActivePanel(e.currentTarget.dataset.to);\r\n  };\r\n\r\n  return (\r\n    <View activePanel={activePanel} popout={popout}>\r\n      <Home id='home' fetchedUser={fetchedUser} go={go} />\r\n      <Persik id='persik' go={go} />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}